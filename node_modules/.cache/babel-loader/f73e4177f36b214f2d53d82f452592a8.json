{"ast":null,"code":"var _jsxFileName = \"/Users/kimwoohyuk/Desktop/Nomad Coders/react-master-class/crypto-tracker/src/routes/Coin.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 0px 10px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst Header = styled.header`\n  height: 10vp;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = Header;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n_c3 = Loader;\nconst Title = styled.h1`\n  margin: 20px;\n  color: ${props => props.theme.accentColor};\n  font-size: 45px;\n`;\n_c4 = Title;\n;\n\nfunction Coin() {\n  _s();\n\n  const {\n    coinId\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const {\n    state\n  } = useLocation();\n  const [info, setInfo] = useState({});\n  const [priceInfo, setPriceInfo] = useState({});\n  useEffect(() => {\n    (async () => {\n      const infoData = await (await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)).json();\n      console.log(infoData);\n      const priceData = await (await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)).json();\n      console.log(priceData);\n      setInfo(infoData);\n      setPriceInfo(priceData);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: (state === null || state === void 0 ? void 0 : state.name) || \"Loding...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 14\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Coin, \"HOTBdVtfTz7pcM4DbjmL0R/iRY4=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c5 = Coin;\nexport default Coin;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Loader\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Coin\");","map":{"version":3,"names":["useEffect","useState","useParams","useLocation","styled","Container","div","Header","header","Loader","span","Title","h1","props","theme","accentColor","Coin","coinId","loading","setLoading","state","info","setInfo","priceInfo","setPriceInfo","infoData","fetch","json","console","log","priceData","name"],"sources":["/Users/kimwoohyuk/Desktop/Nomad Coders/react-master-class/crypto-tracker/src/routes/Coin.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {useParams} from \"react-router\"\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 0px 10px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 10vp;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\nconst Title = styled.h1`\n  margin: 20px;\n  color: ${(props) => props.theme.accentColor};\n  font-size: 45px;\n`\n\ninterface LocationState { // object의 interface 정의.\n  state: {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n  }\n};\n\n \n\ninterface InfoData { // object의 key들을 가져오기 위해 콘솔에 출력 후 우클릭하여 \"store object as global variable\"을 선택하면 temp1로 브라우저에 저장. 이를 다시 object.keys(temp1).join() 메서드로 key만 호출. value는 map과 typeof 메서드를 활용하여 추출. \"Object.values(temp1).map(v => typeof v)\"\n  id:string ;\n  name: string ;\n  symbol: string ;\n  rank: number ;\n  is_new: boolean ;\n  is_active: boolean ;\n  type: string ;\n  logo: string ;\n//  tags: object ; 이 둘은 실제로 object로 구성된 array. array의 경우 object로 출력되므로, array인 경우 추가로 interface를 정의해야 한다. ex) tags: Itag[]; -> ITag라는 inteface의 array라는 의미.\n//  team: object ;\n  description: string ;\n  message: string ;\n  open_source: boolean ;\n  started_at: string ;\n  development_status: string ;\n  hardware_wallet: boolean ;\n  proof_type: string ;\n  org_structure: string ; \n  hash_algorithm: string ;\n  links: object ;\n  links_extended: object ;\n  whitepaper: object ;\n  first_data_at: string ;\n  last_data_at: string ;\n}\n \ninterface PriceData {\n  id:string ;\n  name: string ;\n  symbol: string ;\n  rank: number ;\n  circulating_supply: number ;\n  total_supply: number ;\n  max_supply: number ;\n  beta_value: number ;\n  first_data_at: string ;\n  last_updated: string ;\n  quotes: object ;\n}\n\nfunction Coin () {\n  const {coinId} = useParams(); \n  const [loading, setLoading] = useState(true);\n  const {state} = useLocation() as LocationState; \n  const [info, setInfo] = useState({});\n  const [priceInfo, setPriceInfo] = useState({});\n  useEffect(() => {\n    (async () => {\n      const infoData = await (await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)).json();\n      console.log(infoData); \n      const priceData = await (await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)).json();\n      console.log(priceData);\n      setInfo(infoData);\n      setPriceInfo(priceData);\n    })\n    ();}, []);\n  return <Container>\n  <Header>\n    <Title>{state?.name || \"Loding...\"}</Title> \n  </Header>\n  {loading ? <Loader>Loading...</Loader> : null}\n  </Container>;\n} \n\nexport default Coin"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA,CAJA;KAAMD,S;AAKN,MAAME,MAAM,GAAGH,MAAM,CAACI,MAAO;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,M;AAMN,MAAME,MAAM,GAAGL,MAAM,CAACM,IAAK;AAC3B;AACA;AACA,CAHA;MAAMD,M;AAIN,MAAME,KAAK,GAAGP,MAAM,CAACQ,EAAG;AACxB;AACA,WAAYC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,WAAY;AAC9C;AACA,CAJA;MAAMJ,K;AAgBL;;AA6CD,SAASK,IAAT,GAAiB;EAAA;;EACf,MAAM;IAACC;EAAD,IAAWf,SAAS,EAA1B;EACA,MAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM;IAACmB;EAAD,IAAUjB,WAAW,EAA3B;EACA,MAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,EAAD,CAA1C;EACAD,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMyB,QAAQ,GAAG,MAAM,CAAC,MAAMC,KAAK,CAAE,wCAAuCT,MAAO,EAAhD,CAAZ,EAAgEU,IAAhE,EAAvB;MACAC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;MACA,MAAMK,SAAS,GAAG,MAAM,CAAC,MAAMJ,KAAK,CAAE,0CAAyCT,MAAO,EAAlD,CAAZ,EAAkEU,IAAlE,EAAxB;MACAC,OAAO,CAACC,GAAR,CAAYC,SAAZ;MACAR,OAAO,CAACG,QAAD,CAAP;MACAD,YAAY,CAACM,SAAD,CAAZ;IACD,CAPD;EAQI,CATG,EASD,EATC,CAAT;EAUA,oBAAO,QAAC,SAAD;IAAA,wBACP,QAAC,MAAD;MAAA,uBACE,QAAC,KAAD;QAAA,UAAQ,CAAAV,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEW,IAAP,KAAe;MAAvB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADO,EAINb,OAAO,gBAAG,QAAC,MAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,GAAiC,IAJlC;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAMD;;GAtBQF,I;UACUd,S,EAEDC,W;;;MAHTa,I;AAwBT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}