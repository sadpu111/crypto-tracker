{"ast":null,"code":"var _jsxFileName = \"/Users/kimwoohyuk/Desktop/Nomad Coders/react-master-class/crypto-tracker/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./Api\";\nimport { useOutletContext } from \"react-router-dom\";\nimport ApexCahrt from \"react-apexcharts\"; // 공식문서에서는 Chart를 import하라고 하지만 Chart 컴포넌트와 겹치기 떄문에 ApexChart로 improt \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// useQuery<IHistoricalData[]> => data는 IHistoricalData interface의 배열\nfunction Chart() {\n  _s();\n\n  const {\n    coinId\n  } = useOutletContext();\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading Chart...\" : /*#__PURE__*/_jsxDEV(ApexCahrt, {\n      type: \"line\",\n      series: [{\n        name: \"hello\",\n        data: [1, 2, 3, 4, 5, 6]\n      }, {\n        name: \"sales\",\n        data: [11, 12, 17, 16, 19, 20]\n      }],\n      options: {\n        theme: {\n          mode: \"light\"\n        },\n        chart: {\n          height: 500,\n          width: 500\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Chart, \"tsPjlIvSU9S1FNm2xWh+pMDOlxE=\", false, function () {\n  return [useOutletContext, useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","useOutletContext","ApexCahrt","Chart","coinId","isLoading","data","console","log","name","theme","mode","chart","height","width"],"sources":["/Users/kimwoohyuk/Desktop/Nomad Coders/react-master-class/crypto-tracker/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./Api\";\nimport {useOutletContext} from \"react-router-dom\"\nimport ApexCahrt from \"react-apexcharts\"; // 공식문서에서는 Chart를 import하라고 하지만 Chart 컴포넌트와 겹치기 떄문에 ApexChart로 improt \n\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistoricalData {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n// useQuery<IHistoricalData[]> => data는 IHistoricalData interface의 배열\nfunction Chart() {\n  const {coinId} = useOutletContext<ChartProps>()\n  const {isLoading, data} = useQuery<IHistoricalData[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId))\n  console.log(data);\n  return <div>{isLoading ? \"Loading Chart...\" : \n    <ApexCahrt \n    type=\"line\" \n    series={[\n      {\n        name: \"hello\",\n        data: [1,2,3,4,5,6], \n      },\n      {\n        name: \"sales\",\n        data: [11,12,17,16,19,20], \n      }\n    ]}\n    options={{\n      theme: {\n        mode: \"light\"\n      },\n      chart: {\n        height: 500,\n        width: 500,\n    }}}>\n    </ApexCahrt>\n  }\n  </div>\n}\n\nexport default Chart;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,OAAjC;AACA,SAAQC,gBAAR,QAA+B,kBAA/B;AACA,OAAOC,SAAP,MAAsB,kBAAtB,C,CAA0C;;;;AAiB1C;AACA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM;IAACC;EAAD,IAAWH,gBAAgB,EAAjC;EACA,MAAM;IAACI,SAAD;IAAYC;EAAZ,IAAoBP,QAAQ,CAAoB,CAAC,OAAD,EAAUK,MAAV,CAApB,EAAuC,MAAMJ,gBAAgB,CAACI,MAAD,CAA7D,CAAlC;EACAG,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,oBAAO;IAAA,UAAMD,SAAS,GAAG,kBAAH,gBACpB,QAAC,SAAD;MACA,IAAI,EAAC,MADL;MAEA,MAAM,EAAE,CACN;QACEI,IAAI,EAAE,OADR;QAEEH,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX;MAFR,CADM,EAKN;QACEG,IAAI,EAAE,OADR;QAEEH,IAAI,EAAE,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB;MAFR,CALM,CAFR;MAYA,OAAO,EAAE;QACPI,KAAK,EAAE;UACLC,IAAI,EAAE;QADD,CADA;QAIPC,KAAK,EAAE;UACLC,MAAM,EAAE,GADH;UAELC,KAAK,EAAE;QAFF;MAJA;IAZT;MAAA;MAAA;MAAA;IAAA;EADK;IAAA;IAAA;IAAA;EAAA,QAAP;AAwBD;;GA5BQX,K;UACUF,gB,EACSF,Q;;;KAFnBI,K;AA8BT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}