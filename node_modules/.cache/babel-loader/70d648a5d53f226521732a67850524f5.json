{"ast":null,"code":"var _jsxFileName = \"/Users/kimwoohyuk/Desktop/Nomad Coders/react-master-class/crypto-tracker/src/routes/Coins.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n_c = Loader;\nconst Container = styled.div`\n  padding: 0px 10px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n_c2 = Container;\nconst Header = styled.header`\n  height: 10vp;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c3 = Header;\nconst CoinsList = styled.ul``;\n_c4 = CoinsList;\nconst Coin = styled.li`\n  background-color: white;\n  color: ${props => props.theme.bgColor};\n  margin-bottom: 10px;\n  border-radius: 10px;\n  a { // Coin 컴포넌트 내의 anchor는 아래와 같은 스타일 적용\n    display: block; // 링크뿐만 아니라 영역을 눌러도 이동\n    transition: color 0.2s ease-in; // 색이 전환(변화)되는데 0.2초 지연 및 ease-in 효과\n    padding: 20px;\n  }\n  &:hover { // event 추가문법.\n    a {\n      color: ${props => props.theme.accentColor};\n    }\n  }\n`;\n_c5 = Coin;\nconst Title = styled.h1`\n  color: ${props => props.theme.accentColor};\n  font-size: 45px;\n`; // typescript에 데이터의 shape을 알려주기 위한 interface.\n\n_c6 = Title;\n\n// coin 컴포넌트를 클릭하면 <Link>태그를 통해 {`/${coin.id}`}라는 주소로 이동 -> Routers.tsx의 Router 컴포넌트에서 /:coinId 경로는 Coin.tsx의 Coin 컴포넌트를 랜더링하는 것으로 정의. 정리하면, Coin.tsx의 Coin 컴포넌트의 coinId와 Router.tsx의 Router 컴포넌트의 coinId는 useParams()로 연결되어있고, 이 coinId 자리에 Coins.tsx의 coin array의 id값을 전달하는 것.\nfunction Coins() {\n  _s();\n\n  const [loading, setLoding] = useState(true);\n  const [coins, setCoins] = useState([]); // <CoinInterface[]>를 추가하여 coins state가 해당 interface로 구성된 array라는 정보 전달. 이를 통해 하단의 coin.id, coin.name에서 오류 발생X. coins 전체는 배열, 각 coin의 데이터는 객체.\n\n  useEffect(() => {\n    // useEffect 안에 함수 만들 때 팁. useEffect(() => {()()}). 첫 번째 양괄호 안에 함수를 입력하면 바로 실행된다.\n    (async () => {\n      const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n      const json = await response.json();\n      setCoins(json.slice(0, 100));\n      setLoding(false);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uCF54\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(CoinsList, {\n      children: coins.map(coin => /*#__PURE__*/_jsxDEV(Coin, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${coin.id}`,\n          children: [coin.name, \" \\u2192\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, coin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Coins, \"U6q0Fz/QOTEMQYwwSNpz9/E8j9k=\");\n\n_c7 = Coins;\nexport default Coins;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Loader\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"CoinsList\");\n$RefreshReg$(_c5, \"Coin\");\n$RefreshReg$(_c6, \"Title\");\n$RefreshReg$(_c7, \"Coins\");","map":{"version":3,"names":["useEffect","useState","Link","styled","Loader","span","Container","div","Header","header","CoinsList","ul","Coin","li","props","theme","bgColor","accentColor","Title","h1","Coins","loading","setLoding","coins","setCoins","response","fetch","json","slice","map","coin","id","name"],"sources":["/Users/kimwoohyuk/Desktop/Nomad Coders/react-master-class/crypto-tracker/src/routes/Coins.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\"\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 10px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vp;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  margin-bottom: 10px;\n  border-radius: 10px;\n  a { // Coin 컴포넌트 내의 anchor는 아래와 같은 스타일 적용\n    display: block; // 링크뿐만 아니라 영역을 눌러도 이동\n    transition: color 0.2s ease-in; // 색이 전환(변화)되는데 0.2초 지연 및 ease-in 효과\n    padding: 20px;\n  }\n  &:hover { // event 추가문법.\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: 45px;\n`\n// typescript에 데이터의 shape을 알려주기 위한 interface.\ninterface CoinInterface {  \n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\n\n// coin 컴포넌트를 클릭하면 <Link>태그를 통해 {`/${coin.id}`}라는 주소로 이동 -> Routers.tsx의 Router 컴포넌트에서 /:coinId 경로는 Coin.tsx의 Coin 컴포넌트를 랜더링하는 것으로 정의. 정리하면, Coin.tsx의 Coin 컴포넌트의 coinId와 Router.tsx의 Router 컴포넌트의 coinId는 useParams()로 연결되어있고, 이 coinId 자리에 Coins.tsx의 coin array의 id값을 전달하는 것.\nfunction Coins () {\n  const [loading, setLoding] = useState(true);\n  const [coins, setCoins] = useState<CoinInterface[]>([]); // <CoinInterface[]>를 추가하여 coins state가 해당 interface로 구성된 array라는 정보 전달. 이를 통해 하단의 coin.id, coin.name에서 오류 발생X. coins 전체는 배열, 각 coin의 데이터는 객체.\n  useEffect(() => {\n    // useEffect 안에 함수 만들 때 팁. useEffect(() => {()()}). 첫 번째 양괄호 안에 함수를 입력하면 바로 실행된다.\n    (async() => {\n      const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n      const json = await response.json();\n      setCoins(json.slice(0, 100));\n      setLoding(false);\n    })();\n  }, []);\n  return (\n    <Container>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {loading ? <Loader>Loading...</Loader> : \n        <CoinsList>\n        {coins.map((coin) => (\n        <Coin key={coin.id}>\n          <Link to={`/${coin.id}`}>{coin.name} &rarr;</Link> \n        </Coin>))}\n      </CoinsList>}\n    </Container>\n  )\n}\n\nexport default Coins"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,MAAM,GAAGD,MAAM,CAACE,IAAK;AAC3B;AACA;AACA,CAHA;KAAMD,M;AAKN,MAAME,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA,CAJA;MAAMD,S;AAMN,MAAME,MAAM,GAAGL,MAAM,CAACM,MAAO;AAC7B;AACA;AACA;AACA;AACA,CALA;MAAMD,M;AAON,MAAME,SAAS,GAAGP,MAAM,CAACQ,EAAG,EAA5B;MAAMD,S;AAEN,MAAME,IAAI,GAAGT,MAAM,CAACU,EAAG;AACvB;AACA,WAAYC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAgBF,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYE,WAAY;AAClD;AACA;AACA,CAfA;MAAML,I;AAiBN,MAAMM,KAAK,GAAGf,MAAM,CAACgB,EAAG;AACxB,WAAYL,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYE,WAAY;AAC9C;AACA,CAHA,C,CAIA;;MAJMC,K;;AAgBN;AACA,SAASE,KAAT,GAAkB;EAAA;;EAChB,MAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBrB,QAAQ,CAAC,IAAD,CAArC;EACA,MAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAkB,EAAlB,CAAlC,CAFgB,CAEyC;;EACzDD,SAAS,CAAC,MAAM;IACd;IACA,CAAC,YAAW;MACV,MAAMyB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA5B;MACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;MACAH,QAAQ,CAACG,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,GAAd,CAAD,CAAR;MACAN,SAAS,CAAC,KAAD,CAAT;IACD,CALD;EAMD,CARQ,EAQN,EARM,CAAT;EASA,oBACE,QAAC,SAAD;IAAA,wBACE,QAAC,MAAD;MAAA,uBACE,QAAC,KAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,EAIGD,OAAO,gBAAG,QAAC,MAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,gBACN,QAAC,SAAD;MAAA,UACCE,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACX,QAAC,IAAD;QAAA,uBACE,QAAC,IAAD;UAAM,EAAE,EAAG,IAAGA,IAAI,CAACC,EAAG,EAAtB;UAAA,WAA0BD,IAAI,CAACE,IAA/B;QAAA;UAAA;UAAA;UAAA;QAAA;MADF,GAAWF,IAAI,CAACC,EAAhB;QAAA;QAAA;QAAA;MAAA,QADC;IADD;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GA1BQX,K;;MAAAA,K;AA4BT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}