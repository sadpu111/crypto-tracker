{"ast":null,"code":"var _jsxFileName = \"/Users/kimwoohyuk/Desktop/Nomad Coders/react-master-class/crypto-tracker/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./Api\";\nimport { useOutletContext } from \"react-router-dom\";\nimport ApexCahrt from \"react-apexcharts\"; // 공식문서에서는 Chart를 import하라고 하지만 Chart 컴포넌트와 겹치기 떄문에 ApexChart로 improt \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// useQuery<IHistoricalData[]> => data는 IHistoricalData interface의 배열\nfunction Chart() {\n  _s();\n\n  const {\n    coinId\n  } = useOutletContext();\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading Chart...\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ApexCahrt, {\n        type: \"line\",\n        series: [{\n          name: \"Price\",\n          data: data === null || data === void 0 ? void 0 : data.map(price => price.close) // data prop은 number 타입을 받아야되는데, 못읽어올 경우 undefined가 되는 문제로 오류 발생. 그래서 후단의 as number[] 로 강제 타입 변형.\n\n        }],\n        options: {\n          theme: {\n            mode: \"dark\"\n          },\n          chart: {\n            height: 500,\n            width: 500,\n            toolbar: {\n              show: false\n            },\n            background: \"transparent\"\n          },\n          yaxis: {\n            title: {\n              text: \"Price($)\"\n            }\n          },\n          xaxis: {\n            type: \"datetime\",\n            categories: data === null || data === void 0 ? void 0 : data.map(date => new Date(Number(date.time_close) * 1000).toISOString()) // 지금 활용하는 API의 time_close는 초단위 & string 타입이므로, 먼저 Number로 형변환 후 날짜로 변환.\n\n          },\n          stroke: {\n            curve: \"smooth\",\n            width: 3\n          },\n          fill: {\n            type: \"gradient\",\n            gradient: {\n              gradientToColors: [\"#0be881\"],\n              stops: [1, 100]\n            }\n          },\n          colors: [\"#0fbcf9\"],\n          tooltip: {\n            y: {\n              formatter: value => `$${value.toFixed(1)}`\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ApexCahrt, {\n        type: \"candlestick\",\n        series: [{\n          name: \"시세\",\n          data: data === null || data === void 0 ? void 0 : data.map(price => ({\n            x: price.time_close * 1000,\n            y: [price.open, price.high, price.low, price.close]\n          }))\n        }],\n        width: \"100%\",\n        height: \"160px\",\n        options: {\n          noData: {\n            text: \"\"\n          },\n          plotOptions: {\n            candlestick: {\n              colors: {\n                upward: theme.upwardColor,\n                downward: theme.downwardColor\n              },\n              wick: {\n                useFillColor: true\n              }\n            }\n          },\n          fill: {\n            opacity: 0\n          },\n          theme: {\n            mode: isLight ? \"light\" : \"dark\"\n          },\n          chart: {\n            toolbar: {\n              show: false\n            },\n            background: \"transparent\",\n            fontFamily: '\"Pretendard\", sans-serif',\n            width: 500,\n            height: 300\n          },\n          // colors: [theme.accentColor],\n          grid: {\n            show: false\n          },\n          tooltip: {\n            y: {\n              formatter: value => `$${value.toFixed(2)}`\n            }\n          },\n          xaxis: {\n            labels: {\n              show: false\n            },\n            type: \"datetime\",\n            categories: validData.map(price => price.time_close * 1000),\n            axisTicks: {\n              show: false\n            },\n            axisBorder: {\n              show: false\n            },\n            tooltip: {\n              enabled: false\n            }\n          },\n          yaxis: {\n            labels: {\n              show: false\n            }\n          },\n          stroke: {\n            width: 2\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), \"/>\"]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Chart, \"tsPjlIvSU9S1FNm2xWh+pMDOlxE=\", false, function () {\n  return [useOutletContext, useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","useOutletContext","ApexCahrt","Chart","coinId","isLoading","data","name","map","price","close","theme","mode","chart","height","width","toolbar","show","background","yaxis","title","text","xaxis","type","categories","date","Date","Number","time_close","toISOString","stroke","curve","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","x","open","high","low","noData","plotOptions","candlestick","upward","upwardColor","downward","downwardColor","wick","useFillColor","opacity","isLight","fontFamily","grid","labels","validData","axisTicks","axisBorder","enabled"],"sources":["/Users/kimwoohyuk/Desktop/Nomad Coders/react-master-class/crypto-tracker/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./Api\";\nimport {useOutletContext} from \"react-router-dom\"\nimport ApexCahrt from \"react-apexcharts\"; // 공식문서에서는 Chart를 import하라고 하지만 Chart 컴포넌트와 겹치기 떄문에 ApexChart로 improt \n\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistoricalData {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\n// useQuery<IHistoricalData[]> => data는 IHistoricalData interface의 배열\nfunction Chart() {\n  const {coinId} = useOutletContext<ChartProps>()\n  const {isLoading, data} = useQuery<IHistoricalData[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId))\n  return <div>{isLoading ? \"Loading Chart...\" : <>\n    <ApexCahrt \n    type=\"line\" \n    series={[\n      {\n        name: \"Price\",\n        data: data?.map(price => price.close) as number[], // data prop은 number 타입을 받아야되는데, 못읽어올 경우 undefined가 되는 문제로 오류 발생. 그래서 후단의 as number[] 로 강제 타입 변형.\n      },\n    ]}\n    options={{\n      \n      theme: {\n        mode: \"dark\",\n      },\n      chart: {\n        height: 500,\n        width: 500,\n        toolbar: {\n          show: false,\n        },\n        background: \"transparent\",\n      },\n      yaxis: {\n        title: {\n          text: \"Price($)\"\n        }\n      },\n      \n      xaxis: {\n        \n         type: \"datetime\",\n         categories: data?.map(date => new Date(Number(date.time_close) * 1000).toISOString()) // 지금 활용하는 API의 time_close는 초단위 & string 타입이므로, 먼저 Number로 형변환 후 날짜로 변환.\n      },\n      stroke: {\n        curve: \"smooth\",\n        width: 3,\n      },\n      fill : {\n        type: \"gradient\", gradient: {\n          gradientToColors: [\"#0be881\"],\n          stops: [1, 100]\n        }\n      },\n      colors: [\"#0fbcf9\"],\n      tooltip: {\n        y: {\n          formatter: (value) => `$${value.toFixed(1)}`\n        }\n      }\n    }}>\n    </ApexCahrt>\n    <ApexCahrt\n    type=\"candlestick\"\n    series={[\n      {\n        name: \"시세\",\n        data: data?.map((price) => ({\n          x: price.time_close * 1000,\n          y: [price.open, price.high, price.low, price.close],\n        })) as number,\n      },\n    ]}\n    width=\"100%\"\n    height=\"160px\"\n    options={{\n      noData: {\n        text: \"\",\n      },\n      plotOptions: {\n        candlestick: {\n          colors: {\n            upward: theme.upwardColor,\n            downward: theme.downwardColor,\n          },\n          wick: {\n            useFillColor: true,\n          },\n        },\n      },\n      fill: {\n        opacity: 0,\n      },\n      theme: {\n        mode: isLight ? \"light\" : \"dark\",\n      },\n      chart: {\n        toolbar: {\n          show: false,\n        },\n        background: \"transparent\",\n        fontFamily: '\"Pretendard\", sans-serif',\n        width: 500,\n        height: 300,\n      },\n      // colors: [theme.accentColor],\n      grid: {\n        show: false,\n      },\n      tooltip: {\n        y: {\n          formatter: (value) => `$${value.toFixed(2)}`,\n        },\n      },\n      xaxis: {\n        labels: {\n          show: false,\n        },\n        type: \"datetime\",\n        categories: validData.map((price) => price.time_close * 1000),\n        axisTicks: {\n          show: false,\n        },\n        axisBorder: {\n          show: false,\n        },\n        tooltip: {\n          enabled: false,\n        },\n      },\n      yaxis: {\n        labels: {\n          show: false,\n        },\n      },\n      stroke: {\n        width: 2,\n      },\n    }}\n  />\n    />\n    </>\n    \n  }\n  </div>\n}\n\nexport default Chart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}